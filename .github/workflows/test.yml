name: Test

on:
  push:
  pull_request:

jobs:

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --verbose
  
  gofmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/checkout@v2
      - run: test -z $(gofmt -l .)
  
  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/checkout@v2
      - uses: dominikh/staticcheck-action@v1.1.0
        with:
          version: "2021.1.1"  

  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        go: [18]
    name: v1.${{ matrix.go }}.x | ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.${{ matrix.go }}.x

      - uses: actions/checkout@v2


      - run: go test -race -coverprofile=coverage.out -covermode=atomic 

      - uses: codecov/codecov-action@v1
        if: success() && ${{matrix.go}} == 18 && ${{matrix.platform}} = "ubuntu-latest"
        with:
          fail_ci_if_error: true
